version: '3.8'

services:
  llm-server:
    image: ghcr.io/ggerganov/llama.cpp:light-rocm
    container_name: llm-server
    ports:
      - "5000:5000"
    volumes:
      - ../models/llama2-7b:/models:ro
    environment:
      - MODEL_PATH=/models/llama2-7b-q4_0.gguf
      - HOST=0.0.0.0
      - PORT=5000
    command: >
      sh -c "
        ./server -m $$MODEL_PATH 
        --host $$HOST 
        --port $$PORT 
        --ctx-size 2048 
        --threads 8
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: agent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: agent-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - redis
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: agent-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    restart: unless-stopped

  sentry:
    image: getsentry/sentry:latest
    container_name: agent-sentry
    ports:
      - "9000:9000"
    environment:
      - SENTRY_SECRET_KEY=your-secret-key-here
      - SENTRY_POSTGRES_HOST=sentry-postgres
      - SENTRY_POSTGRES_PORT=5432
      - SENTRY_DB_NAME=sentry
      - SENTRY_DB_USER=sentry
      - SENTRY_DB_PASSWORD=sentry
      - SENTRY_REDIS_HOST=redis
      - SENTRY_REDIS_PORT=6379
    depends_on:
      - redis
      - sentry-postgres
    restart: unless-stopped

  sentry-postgres:
    image: postgres:13
    container_name: sentry-postgres
    environment:
      - POSTGRES_USER=sentry
      - POSTGRES_PASSWORD=sentry
      - POSTGRES_DB=sentry
    volumes:
      - sentry_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
  sentry_postgres_data:
